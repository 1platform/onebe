/// <reference types="node" />
/**
 * The MFA configuration response.
 */
export interface IMFAConfiguration {
    /**
     * The OTP Authentication URL
     */
    otpAuthUrl: string;
    /**
     * The Base32 code that needs to be stored next to the user.
     */
    base32: string;
}
/**
 * An advanced MFA authentication method.
 */
export declare class AdvancedMFA {
    /**
     * Returns an MFA Configuration.
     */
    getMFAConfig(): IMFAConfiguration;
    /**
     * Generates a QR Code for the given OTPAuth URL.
     *
     * @param otpAuthURL The OTPAuth URL we want to generate a QRCode for.
     */
    getQRCode(otpAuthURL: string): Promise<Buffer>;
    /**
     * Verifies a given MFA Authentication Code.
     *
     * @param authenticationCode The code generated by the Authenticator application.
     * @param userSecretMFACode The code use by the user to generate MFA codes.
     */
    verifyAuthenticationCode(authenticationCode: string, userSecretMFACode: string): boolean;
}
