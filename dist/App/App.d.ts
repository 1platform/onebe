import IAppInfo from "./IAppInfo";
import { Constructor } from "../Documentation/MetadataTypes";
/**
 * Custom type used to define an Object element that can be added to the
 * Application object and reused throughout the application.
 */
export declare type ApplicationObject = Constructor;
/**
 * Custom type used to define Functions that can be added to the Application
 * object and reused throughout the application.
 */
export declare type GenericFunction = (...args: any) => any;
/**
 * The entry point of your application. This class should be used through
 * the `app` object exposed globally from the index file of this module.
 *
 * The Application object stores basic information about the application like:
 * the name of the application, the version of the application, a description of it
 * and the public URL used to access the application. This information is automatically
 * added to the documentation files generated by the framework for your application.
 */
export default class App {
    /**
     * Any extra object or function defined in the Application object.
     */
    [key: string]: any;
    /**
     * A list with all the objects and functions attached to the Application object.
     */
    private _elements;
    /**
     * Internal object used to get the information about the application.
     */
    private _appInfo;
    /**
     * Return the Application information object.
     */
    get app(): IAppInfo;
    /**
     * Set the Application information object.
     *
     * @param appInfo The new Application information object.
     */
    set app(appInfo: IAppInfo);
    /**
     * Add a class instance to the Application object in order to reuse it later.
     *
     * @param ReusableClass The class for which we want to add an instance to the application object.
     */
    use(ReusableClass: ApplicationObject): void;
    /**
     * Add a function to the Application object in order to reuse it later.
     *
     * @param reusableFunction The function we want to attach to the application object.
     */
    hook(reusableFunction: GenericFunction): void;
}
